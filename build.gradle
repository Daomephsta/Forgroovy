buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = project.mcVersion + "-" + project.modVersion
group = "daomephsta.forgroovy" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Forgroovy"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.mcVersion + '-' + project.forgeVersion
    runDir = 'run'
    mappings = project.mappingsVersion
    makeObfSourceJar = false
}

configurations {
	//Jars to package using ContainedDeps
	containedDep
}

repositories {
	jcenter()
}

dependencies {
	compile "org.codehaus.groovy:groovy:${project.groovyVersion}"
	//Package the full groovy jar
	containedDep "org.codehaus.groovy:groovy-all:${project.groovyVersion}"
	for (module in ['json', 'nio'])
	{
		compile "org.codehaus.groovy:groovy-${module}:${project.groovyVersion}"
	}
	compile project(':global-ast-transformers')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task generateDependencyMetaFiles {
	//Delete any previous meta files
	file("${buildDir}/dependencyMeta").deleteDir()
	//Generate new meta files
	configurations.containedDep.resolvedConfiguration.resolvedArtifacts.each {
		def metaFile = file("${buildDir}/dependencyMeta/${it.file.name}.meta")
		metaFile.parentFile.mkdirs()
		metaFile.text = "Maven-Artifact: ${it.moduleVersion.id}"
	}
}

jar {
	//Add source and resources of global-ast-transformers
	from tasks.getByPath(':global-ast-transformers:compileJava'), 
	tasks.getByPath(':global-ast-transformers:processResources')
	//Package contained dependencies
	into('/META-INF/libraries') {
		from configurations.containedDep, file("${buildDir}/dependencyMeta")
	}
	//Add contained dependencies to the manifest
	manifest {
		attributes 'ContainedDeps': configurations.containedDep.collect {it.name}.join(' ')
	}
	
	dependsOn generateDependencyMetaFiles
}

task buildGroovyTest(type: Jar) {
	from tasks.getByPath(':groovy-test:assemble')
}
