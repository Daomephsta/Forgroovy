buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		mavenLocal()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		classpath 'daomephsta.forgroovy.gradleplugin:forgroovy-gradle-plugin:0.0.1'
    }
}
apply plugin: 'groovy'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'daomephsta.forgroovy.gradleplugin'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = project.mcVersion + "-" + project.modVersion
group = "daomephsta.groovytest" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "GroovyTest"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft 
{
    version = project.mcVersion + '-' + project.forgeVersion
    runDir = 'run'
    mappings = project.mappingsVersion
    makeObfSourceJar = false
}

repositories
{
	jcenter()
}

dependencies
{
	compile "org.codehaus.groovy:groovy:${project.groovyVersion}:indy"
    for (module in ['json', 'nio'])
	{
		compile "org.codehaus.groovy:groovy-${module}:${project.groovyVersion}:indy"
	}
	compile project(':global-ast-transformers')
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceSets {
	test {
		groovy {
			srcDir 'src/test/groovy'
		}
	}
}

compileGroovy {
	source sourceSets.test.groovy
	groovyOptions.optimizationOptions.put('indy', true)
}
